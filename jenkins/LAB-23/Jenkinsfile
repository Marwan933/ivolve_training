pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'docker.io/marwanhesham463/ivolve'
        KUBE_NAMESPACE = 'default'
        DEPLOYMENT_YAML = 'jenkins/LAB-23/jenkins/LAB-23/deployment.yaml'
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    git url: 'https://github.com/IbrahimAdell/Lab.git', branch: 'main'
                    dir('jenkins/LAB-23') {
                        git url: 'https://github.com/Marwan933/ivolve_training.git', branch: 'main'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'Docker_hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                        sh 'docker push $DOCKER_IMAGE'
                    }
                }
            }
        }

        stage('Edit Deployment.yaml') {
            steps {
                script {
                    sh "sed -i 's|image:.*|image: $DOCKER_IMAGE|g' $DEPLOYMENT_YAML"
                }
            }
        }

       stage('Deploy to Kubernetes') {
    steps {
        script {
            sh """
            kubectl --kubeconfig=/var/lib/jenkins/.kube/config apply -f $DEPLOYMENT_YAML -n $KUBE_NAMESPACE
            """
        }
    }
}

        

        stage('Post Action') {
            steps {
                script {
                    echo "Deployment to Kubernetes completed successfully!"
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully...!"
        }
        failure {
            echo "Pipeline failed."
        }
    }
}
